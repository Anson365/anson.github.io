[{"title":"java concurrent解析","url":"http://anson666.top/2017/06/07/java-concurrent/","content":"<p><strong><em>Executor</em></strong> :抽象的Runnable任务的执行者，提供一个excute方法<br><strong><em>ExecutorService</em></strong> :抽象的线程池管理者，包含三种状态：运行、关闭、终止。当调用了shutdown()方法时，便进入了关闭状态，ExcecutorService<br>不在接受新的任务，当已经提交的任务完成后便达到终止状态。<br><strong><em>ReentrantLock</em></strong> :一个可重入得Lock代码层面的并发锁，需手动释放<br><strong><em>Future</em></strong> :一个Callable线程执行结束后返回的结果，提供isDone检查call方法是否执行完毕，cancel终止线程<br><strong><em>BlockingQueue</em></strong> :阻塞队列，常见ArrayBlockQueue,LinkedBlockQueue前者有容量限制，后者没有限制  </p>\n","categories":[],"tags":[]},{"title":"小米面试总结","url":"http://anson666.top/2017/05/28/xiaomi-interview/","content":"<p>上周面了一下小米的金融，不管结果如何，觉得还是有必要对其中涉及到知识点及问题进行总结。</p>\n<h3 id=\"Object类中的方法\"><a href=\"#Object类中的方法\" class=\"headerlink\" title=\"Object类中的方法\"></a>Object类中的方法</h3><ul>\n<li><p>+equals():Boolean<br>原生的equals比较的是两个对象的引用是否相同，换而言之就是比较对象的内存地址是否一致</p>\n</li>\n<li><p>+hashcode():int<br>通过散列算法计算对象的hash值<br>拓展：解决hash冲突的方式有哪些？</p>\n</li>\n<li><p>+toString():String<br>返回对象的字符串表示方式</p>\n</li>\n<li><p>+wait()/wait(long time)/wait(long time,int nanos):void<br>使当前线程让出CPU资源进入等待状态，<br>当其他线程调用该对象的notify/notifyAll方法时跳出等待状态</p>\n</li>\n<li><p>+notify():void<br>唤醒监听这个对象的一个线程</p>\n</li>\n<li><p>+notifyAll():void<br>唤醒监听这个对象的所有线程</p>\n</li>\n<li><p>+getClass():Class<br>返回当前对象的runtime class</p>\n</li>\n<li><p>clone:Object<br>返回当前对象的副本，使浅克隆。深克隆的话可以用序列化及反序列化方式</p>\n</li>\n<li><p>finalize:void<br>当对象将被垃圾收集器回收的时候，阻止垃圾回收器回收，该方法只能使对象存活一次 </p>\n</li>\n</ul>\n<h3 id=\"保证线程安全的方式有哪些以及他们之间的区别？\"><a href=\"#保证线程安全的方式有哪些以及他们之间的区别？\" class=\"headerlink\" title=\"保证线程安全的方式有哪些以及他们之间的区别？\"></a>保证线程安全的方式有哪些以及他们之间的区别？</h3><p> 目前保证线程安全的三种方式<br>    1.用volatile修饰的变量<br>    2.用Reetrantlock 即lock和unlock修饰的代码块<br>    3.用synchronized修饰的方法或者代码块<br> volatile:<br>    使用该关键字修饰的，访问变量时告诉jvm需要从主内存中获取，保证可见性，不会造成线程阻塞；<br> synchronized:<br>    是jvm级的安全锁，保证可见性及原子性，使用时如果发生中断异常会主动释放当前锁，会造成线程阻塞；<br> Reetrantlock:<br>    代码级安全锁，保证可见性及原子性，使用时不会主动释放当前锁，需要手动释放，会造成线程阻塞</p>\n<p> 1）用法区别<br>     synchronized(隐式锁)：在需要同步的对象中加入此控制，synchronized可以加在方法上，也可以加在特定代码块中，括号中表示需要锁的对象。<br>     lock（显示锁）：需要显示指定起始位置和终止位置。一般使用ReentrantLock类做为锁，多个线程中必须要使用一个ReentrantLock类做为对 象才能保证锁的生效。且在加锁和解锁处需要通过lock()和unlock()显示指出。所以一般会在finally块中写unlock()以防死锁。<br> 2）synchronized和lock性能区别<br>     synchronized是托管给JVM执行的，而lock是java写的控制锁的代码。<br>     synchronized采用的是CPU悲观锁机制，即线程获得的是独占锁。独占锁意味着其 他线程只能依靠阻塞来等待线程释放锁。独占锁意味着其他线程只能依靠阻塞来等待线程释放锁。而在CPU转换线程阻塞时会引起线程上下文切换，当有很多线程竞争锁的时候，会引起CPU频繁的上下文切换导致效率很低。<br>     Lock用的是乐观锁方式。所谓乐观锁就是，每次不加锁而是假设没有冲突而去完成某项操作，如果因为冲突失败就重试，直到成功为止。乐观锁实现的机制就 是CAS操作（Compare and Swap）。<br> 3）synchronized和lock用途区别<br>     synchronized原语和ReentrantLock在一般情况下没有什么区别，但是在非常复杂的同步应用中，请考虑使用ReentrantLock，特别是遇到下面2种需求的时候。<br>     1.某个线程在等待一个锁的控制权的这段时间需要中断<br>     2.需要分开处理一些wait-notify，ReentrantLock里面的Condition应用，能够控制notify哪个线程<br>     3.具有公平锁功能，每个到来的线程都将排队等候、</p>\n<h3 id=\"写一个生产消费模型\"><a href=\"#写一个生产消费模型\" class=\"headerlink\" title=\"写一个生产消费模型\"></a>写一个生产消费模型</h3><h3 id=\"二分查找递归及非递归写法\"><a href=\"#二分查找递归及非递归写法\" class=\"headerlink\" title=\"二分查找递归及非递归写法\"></a>二分查找递归及非递归写法</h3><h3 id=\"用两个stack模拟一个queue\"><a href=\"#用两个stack模拟一个queue\" class=\"headerlink\" title=\"用两个stack模拟一个queue\"></a>用两个stack模拟一个queue</h3><h3 id=\"简单的谈谈jvm\"><a href=\"#简单的谈谈jvm\" class=\"headerlink\" title=\"简单的谈谈jvm\"></a>简单的谈谈jvm</h3><h3 id=\"项目中遇到的难点及解决方式\"><a href=\"#项目中遇到的难点及解决方式\" class=\"headerlink\" title=\"项目中遇到的难点及解决方式\"></a>项目中遇到的难点及解决方式</h3><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p> 整个面试的过程中，发现对基础的知识的提问相对于自己参与项目的提问整体时间所占比例大幅下降<br> 由于更加专业化，面试官在提问的过程中也着重于他们自己的业务。所以整体感觉，<br> 如果他们问的不是你自己感兴趣或者职业侧重点，不管是不是当前阶段的知识盲区，<br> 最后能不能拿到offer都可以在某种程度上作为自己选择接不接offer的一个参考点。</p>\n","categories":["summarize"],"tags":["工作","面试","总结"]},{"title":"大连之行","url":"http://anson666.top/2017/05/22/daling-travelling/","content":"<p>趁着好基友毕业前夕，去大连浪了一波。<br>大连这座城市，在我之前的印象中就是薄xl和万达的发家地。然后就传说中的绿化很好，很赞！<br>抵达大连已经早上八点多了，<br>一出火车站给人的感觉十分的清爽。感觉整洁的街道<br>一路绿树掩映，路边偶尔的鲜花点缀，丝毫没有已到五月中旬的感觉。</p>\n<p>在好基友的导游下，第一站我们来到了星海广场<br>听说之前广场中央的华表由于bo的倒台而拆除了<br>另外大连建市一百年的金色脚印也被铲除<br>除了这个之外 周围的一切都看起来这么的祥和<br><img src=\"http://s11.mogucdn.com/mlcdn/c45406/170526_53g3l98j5d4dfaie3al8k446a42el_12168x3824.jpg_500x9999.v1c7E.jpg\" alt=\"星海广场\"></p>\n<p>一群海鸥在熙攘的人群头上盘旋，远处的大桥看起来是如此的刺眼。<br>大好的海景视野就这么给拦腰斩断了。  </p>\n<p>恰逢大连举办第十七届国际徒步节，于是跟随大部队。<br>我们也开始了30多公里的沿海滨路徒步而整个大连的景色都集中在这条路上  </p>\n<p>滨海路沿线风景<br><img src=\"http://s2.mogucdn.com/mlcdn/c45406/170526_33hi3hce87922fadfi7f9e0kf6304_1280x960.jpg_500x9999.v1c7E.jpg\" alt=\"滨海西路\"></p>\n<p>退役的辽宁舰<br><img src=\"http://s11.mogucdn.com/mlcdn/c45406/170526_0d6073k5119acjhhjib7cg9091bag_1280x960.jpg_500x9999.v1c7E.jpg\" alt=\"辽宁舰\"></p>\n<p>抓拍的海鸥<br><img src=\"http://s11.mogucdn.com/mlcdn/c45406/170526_3kf14k5hbd50fe1l8gge71e6d22cd_1280x960.jpg_500x9999.v1c7E.jpg\" alt=\"海鸥\"></p>\n<p>海边的小鹅暖石<br><img src=\"http://s11.mogucdn.com/mlcdn/c45406/170526_7dfj89j6lk92aig0aj93g5dc256ea_1280x960.jpg_500x9999.v1c7E.jpg\" alt=\"鹅暖石\"></p>\n<p>我们就这样一步一步，边走边逗留，从九点10分左右出发，一直走到了下午的5点半。沿着滨海西路、滨海中路，最后终于到了滨海东路。<br>基友的脚也起泡了，实在是太累了。于是我们就此作罢，开始往回走。  </p>\n<p>最后夜宿星海广场，晚上也没什么活动，倒头就睡着了</p>\n<p>第二天我们启程前往造船厂，远观了正在建造中的中国第一艘国产航母<br><img src=\"http://s2.mogucdn.com/mlcdn/c45406/170526_5g4815b8e161fg1ja14lg8h0g140c_1280x960.jpg_500x9999.v1c7E.jpg\" alt=\"国产航母\"></p>\n<p>就此两天的大连之行就基本结束了。</p>\n","categories":["life"],"tags":["生活","旅行"]},{"title":"java后端学习知识点梳理","url":"http://anson666.top/2017/05/18/java-road-map/","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>  经过几年的工作学习，对后端开发有了一定的认识。下面对工作中遇到的部分知识点进行终结梳理。<br>  一个是今后对照参考一下作为学习提纲，再者进行简单总结进行复习回顾。</p>\n<h2 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><h3 id=\"网络知识\"><a href=\"#网络知识\" class=\"headerlink\" title=\"网络知识\"></a>网络知识</h3><ul>\n<li>HTTP协议</li>\n<li>OSI七层模型</li>\n<li>TCP/IP协议</li>\n<li>网络通信</li>\n</ul>\n<h3 id=\"分布式相关\"><a href=\"#分布式相关\" class=\"headerlink\" title=\"分布式相关\"></a>分布式相关</h3><ul>\n<li>负载均衡（七层，四层，系统。。。）</li>\n<li>SOAP</li>\n<li>分库分表</li>\n<li>分布式事务</li>\n</ul>\n<h3 id=\"开源框架\"><a href=\"#开源框架\" class=\"headerlink\" title=\"开源框架\"></a>开源框架</h3><ul>\n<li>SpringMVC</li>\n<li>Struts2</li>\n<li>Mybatis</li>\n<li>Hibernate</li>\n<li>SpringBoot</li>\n<li>Dubbo</li>\n<li>Shiro</li>\n</ul>\n<h3 id=\"数据库及中间件\"><a href=\"#数据库及中间件\" class=\"headerlink\" title=\"数据库及中间件\"></a>数据库及中间件</h3><h4 id=\"关系型数据库\"><a href=\"#关系型数据库\" class=\"headerlink\" title=\"关系型数据库\"></a>关系型数据库</h4><ul>\n<li>Mysql</li>\n<li>PostgreSql</li>\n<li>Oracle</li>\n</ul>\n<h4 id=\"kv\"><a href=\"#kv\" class=\"headerlink\" title=\"kv\"></a>kv</h4><ul>\n<li>redis</li>\n<li>memcache</li>\n<li>mongodb</li>\n</ul>\n<h4 id=\"搜索引擎\"><a href=\"#搜索引擎\" class=\"headerlink\" title=\"搜索引擎\"></a>搜索引擎</h4><ul>\n<li>solr</li>\n<li>elastic search</li>\n<li>lucence</li>\n</ul>\n<h4 id=\"MQ\"><a href=\"#MQ\" class=\"headerlink\" title=\"MQ\"></a>MQ</h4><ul>\n<li>kafka</li>\n<li>RabitMQ</li>\n</ul>\n<h4 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h4><ul>\n<li>Nginx</li>\n<li>LVS</li>\n</ul>\n<h4 id=\"web容器\"><a href=\"#web容器\" class=\"headerlink\" title=\"web容器\"></a>web容器</h4><ul>\n<li>Tomcat</li>\n<li>jetty</li>\n</ul>\n<h4 id=\"其他知识点\"><a href=\"#其他知识点\" class=\"headerlink\" title=\"其他知识点\"></a>其他知识点</h4><ul>\n<li>JVM</li>\n<li>多线程</li>\n<li>IO</li>\n<li>设计模式</li>\n<li>网络安全</li>\n<li>大数据相关</li>\n<li>基本算法</li>\n</ul>\n","categories":["study"],"tags":["学习","java","后端","中间件","数据库"]},{"title":"The beginning or the end","url":"http://anson666.top/2017/05/17/foreword/","content":"<h2 id=\"The-end\"><a href=\"#The-end\" class=\"headerlink\" title=\"The end\"></a>The end</h2><p>  不知不觉2017年快过半了。不得不感慨一下时光的荏苒。回顾这半年还是可圈可点的，只是真正到总结的时候却变得那么不值一提。<br>  一次“偶然”的机会，四月底，踏上了换工作的路程。写简历的时候，颇有踌躇，在公司的一年余竟然总结不出什么可圈可点的地方。<br>  看着简历上一两笔概况的一年半。。。<br>  看着一份份简历出去后石沉大海。。。<br>  看着全白的github提交记录。。。<br>  看着当时创建的技术blog再无更新。。。</p>\n<p>  我这个毕业快三年的七尺男儿，感觉到了前所未有的危机。  </p>\n<p>  鬼知道这段时间干了什么<br>  鬼知道这段时间学了什么<br>  鬼知道这段时间经历了什么<br>  鬼知道接下来的路该怎么走</p>\n<p>  绝望！伤心！失落！<br>  生活上的丰衣足食的环境里让我失去了向上攀爬的动力！<br>  工作上的得心应手让我失去了继续学习的能力！</p>\n<p>  我！当危机来临时变得这么手足无措。</p>\n<h2 id=\"The-beginning\"><a href=\"#The-beginning\" class=\"headerlink\" title=\"The beginning\"></a>The beginning</h2><p>  决定从现在起一定要改变现状<br>  工作上开始记录总结<br>  生活上乐于分享<br>  学习上做好笔记</p>\n<p>  不图别的至少让下次换工作的时候简历及知识点上有亮点和快速复习！！！</p>\n<p>  路漫漫其修远兮，我将上下而求索！</p>\n","categories":["life"],"tags":["生活","工作","学习"]},{"title":"about","url":"http://anson666.top/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://anson666.top/category/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://anson666.top/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://anson666.top/tag/index.html","content":"","categories":[],"tags":[]}]